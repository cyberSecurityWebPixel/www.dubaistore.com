var cartUpTemplates = [];
var cartyTemplates = [];
var CARTUP_THEME_HOST = "https://ecomapi.cartup.ai/v1/theme";
//var CARTUP_THEME_HOST = "https://eapistage.cartup.ai/v1/theme";

function matchSpotdyUniqueId(previewId) {
    previewId = decodeURI(previewId);
    if(!previewId)
        return false;
    try {
        previewId = JSON.parse(previewId);
    }catch(e){
        return false;
    }
    var navigator_info = window.navigator;
    var screen_info = window.screen;
    var obj = {
        mimeTypes : navigator_info.mimeTypes.length,
        userAgent : navigator_info.userAgent.replace(/\D+/g, ''),
        plugins : navigator_info.plugins.length,
        height : screen_info.height,
        width : screen_info.width,
        pixelDepth : screen_info.pixelDepth,
    }
    for(var key in obj) {
        if(obj[key] != previewId[key])
            return false;
    }
    return true;
}


function cartUpPreview(data){
    if(matchSpotdyUniqueId(spotdyEventsConfigData.previewId)){
        setInterval(function(){
            getPreviewData();
        }, 5000);
    }
}


var prevCartupPreviewId = "";
function getPreviewData(){
    let url = CARTUP_THEME_HOST;
    let d = window.sessionStorage.spotDyConfigData;
    d = JSON.parse(d);
    let data = {
        "orgId": d.orgId,
        "orgName": d.org,
        "themeId": "previewTheme"
    }
    url += "?request=" + encodeURI(JSON.stringify(data));
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.onreadystatechange = function() { 
        if (xmlHttp.readyState == 4 && xmlHttp.status == 200){
            let data = JSON.parse(xmlHttp.responseText);
            data = data.widgetThemes;
            if(data.length <= 0) return;
            data = data[0];
            let payload = JSON.parse(decodeURI(data.payload));
            if(payload.id != prevCartupPreviewId){
                prevCartupPreviewId = payload.id;
                showInWeb(data);
            }
        }
    }
    xmlHttp.open("GET", url, true); 
    xmlHttp.send();
}

function getElementByAttribute(attr, root) {
    root = root || document.body;
    if(root.hasAttribute(attr)) {
        return root;
    }
    var children = root.children, 
        element;
    for(var i = children.length; i--; ) {
        element = getElementByAttribute(attr, children[i]);
        if(element) {
            return element;
        }
    }
    return null;
}

function replaceTags(elem, tag, data) {
    var elemStr = elem.outerHTML;
    elemStr = elemStr.replaceAll(tag, data);
    return htmlToElem(elemStr);
}

//var spotdyCartupData = [];
function insertRecommendationElement(elem, arr, divId,sku, pname, orgId, orgName) {
    if(!arr) return elem;
    if(!Array.isArray(arr)) return elem;
    if(arr.length == 0) return elem;
    // var badgeElement = getCartupBadgeElement(elem); //elem.querySelector(".cartupBadge");
    // if(!badgeElement) return elem;
    for(let index = 0; index < arr.length; index++) {
        let obj = arr[index];
        let badgeElement = getCartupBadgeElement(elem, JSON.parse(obj.badgePlacement), divId,JSON.parse(obj.assetType));
        var assetType = obj.assetType;
        assetType = JSON.parse(assetType);
        if(obj.badgeType)
        var badgeType = JSON.parse(obj.badgeType);
        else
        var badgeType = {
            "badgeSelectionType": "Attribute type",
            "name": "",
            "type": "",
            "operator": "",
            "field": "",
            "value": "",
            "timer": "",
            "featureType": "dynaic"
        };
        
        var badgeSelectionType = badgeType.badgeSelectionType;
        var count = 0;
        if(obj.count)
        count = obj.count;
    
        if(!obj.id)
        var getId = 0;
        else
        var getId = (obj.id).replace(/\D/g,'');

        var element = assetType.assetType == "Text" ? getTextBadging(assetType,count,badgeSelectionType,sku, pname, orgId, orgName,getId) : getImageBadging(assetType,badgeSelectionType,sku, pname, orgId, orgName,getId); 
        badgeElement.appendChild(element);
    }
    return elem;   
}

function getCartupBadgeElement(elem, positionObj, divId,obj) {
    let position = positionObj.position;
    var element = document.createElement("div");
    element.className = "badgeEle";
    element.style.position = "absolute";
    element.style.zIndex = "999";
    if(!position)
    position = "Top left";
    if(position == "Top left") {
        element.style.top = "0px";
        element.style.left = "0px";
        element.style.right = "auto !important";
    } else if(position == "Top right") {
        element.style.top = "0px";
        element.style.right = "30px";
        if(divId == 'live_main_bundle' || divId == 'PDP_custom_bundle_intertoys')
        element.style.right = "0";
    } else if(position == "Bottom left") {
        element.style.bottom = "0px";
        element.style.left = "0px";
        element.style.right = "auto !important";
    } else if(position == "Bottom right") {
        element.style.bottom = "0px";
        element.style.right = "30px";
        if(divId == 'live_main_bundle' || divId == 'PDP_custom_bundle_intertoys')
        element.style.right = "0";
    } else if(position == "Top center") {
        element.style.top = "0px";
        element.style.left = "0px";
        element.style.right = "0px";
        element.style.margin = "0 auto";
    } else if(position == "Left center") {
        element.style.top = "48%";
        element.style.left = "0px";
        element.style.right = "auto";
    } else if(position == "Right center") {
        element.style.top = "48%";
        element.style.right = "0px";
        element.style.left = "auto";
    } else if(position == "Bottom center") {
        element.style.top = "auto";
        element.style.bottom = "0px";
        element.style.left = "0px";
        element.style.right = "0px";
        element.style.margin = "0 auto";
    }
    let elementObj = elem.querySelector(".cartupBadgeElement");
    if(!elementObj) return element;
    var width = parseInt(obj.badgeSize.split(" ")[0]);
    var height = parseInt(obj.badgeSize.split(" ")[1]);
    element.style.maxWidth = width + "px";
    element.style.width = "100%";
    element.style.minHeight = height + "px";
    //element.appendChild(badgingElement);
    
    elementObj.style.position = "relative";
    element.style.backgroundColor = obj.backgroundColor;
    element.style.padding = "10px";
    if(obj.badgeShape == "circular rectangle") {
        element.style.borderRadius = "5px";
    }
    elementObj.appendChild(element);
    return element;
}
function getCartupProductElement(elem, data, displayName, divId, customValues={}) {
    if(elem){
    elem = replaceTags(elem, "{{widget_id}}", divId);

    if(data.mainWidgetId)
    elem = replaceTags(elem, "{{mainwidget_id}}", data.mainWidgetId);

    elem = replaceTags(elem, "{{widget_displayName}}", displayName);
    
    //elem = replaceTags(elem, "{{product_data}}", "'" + encodeURIComponent(JSON.stringify(data)) + "'");
    elem = replaceTags(elem, "{{banner}}", customValues?.banner || "");
    let tempElem = getElementByAttribute("isArray", elem);
    if(!tempElem){
        console.log("No attribute with isArray found");
        return;
    }
    var repeatedElem = tempElem.cloneNode(true);
    let parentElement = getElementByAttribute("isArray", elem).parentElement;
    let isArryElem = getElementByAttribute("isArray", parentElement);
    if(isArryElem){
        isArryElem.remove();
    }
    if(!repeatedElem){
        console.log("There is no array element to show product names")
        return elem;
    }
    var isVariantPresent = 0;
    var varStockVal = 0;
    //var varDropdown = "<select isVariantArray class="variantdropdown" name="variantdropdown" id="" data-product-key="{{product_id}}" class="size_list_pdp" tabindex="-1">";
    for(var index = 0; index < data.length; index++){
        var cln = repeatedElem.cloneNode(true);
        // cln = replaceTags(cln, "{{currency_symbol}}", getCurrencySymbol);
        cln = replaceTags(cln, "{{index}}", index);
        cln = replaceTags(cln, "{{product_name}}", data[index].name);
        cln = replaceTags(cln, "{{product_id}}", data[index].sku);
        if(data[index].productId)
        cln = replaceTags(cln, "{{product_addToCartId}}", data[index].productId);
        cln = replaceTags(cln, "{{product_price}}", data[index].price);
        cln = replaceTags(cln, "{{product_discountedPrice}}", data[index].discountedPrice);
        cln = replaceTags(cln, "{{nodiscount_price}}", data[index].nodiscountPrice);
        if(data[index].discountedPercentage && data[index].discountedPrice){
            if(parseFloat(data[index].discountedPercentage)>0)
                cln = replaceTags(cln, "{{product_discountedPercentage}}", data[index].discountedPercentage+"% Off");
            else
                cln = replaceTags(cln, "{{product_discountedPercentage}}", "");
        }else{
            cln = replaceTags(cln, "{{product_discountedPercentage}}", "");
        }

        cln = replaceTags(cln, "{{product_imageUrl}}", data[index].smallImage);
        cln = replaceTags(cln, "{{product_currentPageUrl}}", data[index].currentPageUrl);
        cln = replaceTags(cln, "{{widget_displayName}}", displayName);
        //cln = replaceTags(cln, "{{product_stock}}", 0);
        //cln = replaceTags(cln, "{{variant_stock}}", 0);
        if(data[index].stock)
            if(parseFloat(data[index].stock)>0)
                cln = replaceTags(cln, "{{product_stock}}", 1);
        //cln = replaceTags(cln, "{{isVariantPresent}}", isVariantPresent);
        var badgeArr = [];
        //window.sessionStorage.orgId !== '9f630604-daa1-455d-aceb-a4150fa9127c' && 
        if(badgingStatus === true && data[index].badging){
            //if(data[index].badging){
                var validBadgesArr = [];
                if(data[index].badging.length > 0){
                    for(var bd=0;bd<data[index].badging.length;bd++){
                        var currDate = new Date();
                        var showBadgeIfDateIsValid = 0;
                        if(data[index].badging[bd].badgePlacement){
                            //if(JSON.parse(data[index].badging[bd])){
                                //if(JSON.parse(data[index].badging[bd].badgePlacement)){
                                    //JSON.parse(JSON.parse(JSON.stringify(data[index].badging[bd])).badgePlacement).placement == 'recommendation'
                                    
                                    try{
                                        if(window.sessionStorage.orgId !== '9f630604-daa1-455d-aceb-a4150fa9127c')
                                        showBadgeIfDateIsValid = 1;
                                    
                                        data[index].badging[bd].badgePlacement = (data[index].badging[bd].badgePlacement).replaceAll("'",'"');
                                        data[index].badging[bd].assetType = (data[index].badging[bd].assetType).replaceAll("'",'"');
                                        if(JSON.parse(data[index].badging[bd].assetType).start_date && JSON.parse(data[index].badging[bd].assetType).end_date){
                                            var startDate = new Date(JSON.parse(data[index].badging[bd].assetType).start_date);
                                            var endDate = new Date(JSON.parse(data[index].badging[bd].assetType).end_date);
                                            if (currDate > startDate && currDate < endDate)
                                                showBadgeIfDateIsValid = 1;
                                        }
                                        if(JSON.parse(data[index].badging[bd].badgePlacement).placement.toLowerCase() == 'recommendation' && showBadgeIfDateIsValid == 1){
                                            if(window.sessionStorage.orgId == '9f630604-daa1-455d-aceb-a4150fa9127c'){
                                                validBadgesArr = [];
                                                if(data[index].badging[bd].isEnabled == true){
                                                    validBadgesArr.push(data[index].badging[0]);
                                                }
                                                if(validBadgesArr.length>0)
                                                for(var i=0;i<validBadgesArr.length;i++){
                                                    validBadgesArr[0].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                
                                                    if(validBadgesArr.length == 2){
                                                        validBadgesArr[0].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                        validBadgesArr[1].badgePlacement = '{"placement": "recommendation", "position": "Bottom right"}';
                                                    }
                                                    if(validBadgesArr.length == 3){
                                                        validBadgesArr[0].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                        validBadgesArr[1].badgePlacement = '{"placement": "recommendation", "position": "Bottom right"}';
                                                        validBadgesArr[2].badgePlacement = '{"placement": "recommendation", "position": "Top left"}';
                                                    }
                                                    if(validBadgesArr.length == 4){
                                                        validBadgesArr[0].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                        validBadgesArr[1].badgePlacement = '{"placement": "recommendation", "position": "Bottom right"}';
                                                        validBadgesArr[2].badgePlacement = '{"placement": "recommendation", "position": "Top left"}';
                                                        validBadgesArr[3].badgePlacement = '{"placement": "recommendation", "position": "Bottom left"}';
                                                    }
                                                    if(validBadgesArr.length == 5){
                                                        validBadgesArr[0].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                        validBadgesArr[1].badgePlacement = '{"placement": "recommendation", "position": "Bottom right"}';
                                                        validBadgesArr[2].badgePlacement = '{"placement": "recommendation", "position": "Top left"}';
                                                        validBadgesArr[3].badgePlacement = '{"placement": "recommendation", "position": "Bottom left"}';
                                                        validBadgesArr[4].badgePlacement = '{"placement": "recommendation", "position": "Bottom"}';
                                                    }
                                                    if(validBadgesArr.length == 6){
                                                        validBadgesArr[0].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                        validBadgesArr[1].badgePlacement = '{"placement": "recommendation", "position": "Bottom right"}';
                                                        validBadgesArr[2].badgePlacement = '{"placement": "recommendation", "position": "Top left"}';
                                                        validBadgesArr[3].badgePlacement = '{"placement": "recommendation", "position": "Bottom left"}';
                                                        validBadgesArr[4].badgePlacement = '{"placement": "recommendation", "position": "Bottom"}';
                                                        validBadgesArr[5].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                    }

                                                    if(validBadgesArr.length == 1){
                                                        if(validBadgesArr[0].isEnabled == true){
                                                            validBadgesArr[0].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                        }
                                                    }
                                                    if(validBadgesArr.length == 2){
                                                        if(validBadgesArr[0].isEnabled == false && validBadgesArr[1].isEnabled == true){
                                                            validBadgesArr[1].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                        }
                                                    }
                                                    if(validBadgesArr.length == 3){
                                                        if(validBadgesArr[0].isEnabled == false && validBadgesArr[1].isEnabled == false && validBadgesArr[2].isEnabled == true){
                                                            validBadgesArr[2].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                        }
                                                    }
                                                    if(validBadgesArr.length == 4){
                                                        if(validBadgesArr[0].isEnabled == false && validBadgesArr[1].isEnabled == false && validBadgesArr[2].isEnabled == false && validBadgesArr[3].isEnabled == true){
                                                            validBadgesArr[3].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                        }
                                                    }
                                                    if(validBadgesArr.length == 5){
                                                        if(validBadgesArr[0].isEnabled == false && validBadgesArr[1].isEnabled == false && validBadgesArr[2].isEnabled == false && validBadgesArr[3].isEnabled == false && validBadgesArr[4].isEnabled == true){
                                                            validBadgesArr[4].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                        }
                                                    }
                                                    if(validBadgesArr.length == 6){
                                                        if(validBadgesArr[0].isEnabled == false && validBadgesArr[1].isEnabled == false && validBadgesArr[2].isEnabled == false && validBadgesArr[3].isEnabled == false && validBadgesArr[4].isEnabled == false && validBadgesArr[5].isEnabled == true){
                                                            validBadgesArr[5].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
                                                        }
                                                    }
                                                }
                                                //if(validBadgesArr[i].isEnabled == true){
                                                    //badgeArr.push(data[index].badging[bd])
                                                    cln = insertRecommendationElement(cln, validBadgesArr, divId,data[index].sku,data[index].name,window.sessionStorage.orgId,window.sessionStorage.orgName);
                                                //}
                                                
                                            }else{
                                            
                                                if(data[index].badging[bd].isEnabled == true){
                                                    badgeArr.push(data[index].badging[bd])
                                                    cln = insertRecommendationElement(cln, badgeArr, divId,data[index].sku,data[index].name,window.sessionStorage.orgId,window.sessionStorage.orgName);
                                                }
                                            }
                                        }
                                    } catch (err) {
                                        console.log(err);
                                    }
                                //}
                            //}
                        }
                    }
                }
            }
        // if((data[index].sku === '1994031' || data[index].sku === '1994032' || data[index].sku === '1994033' || data[index].sku === '1994034' || data[index].sku === '1994035' || data[index].sku === '1994036' || data[index].sku === '1994037') && data[index].badging){
        // //if(data[index].badging){
        //     if(data[index].badging.length > 0){
        //         for(var bd=0;bd<data[index].badging.length;bd++){
        //             var currDate = new Date();
        //             var showBadgeIfDateIsValid = 0;
                    
        //             if(data[index].badging[bd].badgePlacement){
        //                 //if(JSON.parse(data[index].badging[bd])){
        //                     //if(JSON.parse(data[index].badging[bd].badgePlacement)){
        //                         //JSON.parse(JSON.parse(JSON.stringify(data[index].badging[bd])).badgePlacement).placement == 'recommendation'
                                
        //                         try{
        //                             data[index].badging[bd].badgePlacement = (data[index].badging[bd].badgePlacement).replaceAll("'",'"');
        //                             data[index].badging[bd].assetType = (data[index].badging[bd].assetType).replaceAll("'",'"');
        //                             if(JSON.parse(data[index].badging[bd].assetType).start_date && JSON.parse(data[index].badging[bd].assetType).end_date){
        //                                 var startDate = new Date(JSON.parse(data[index].badging[bd].assetType).start_date);
        //                                 var endDate = new Date(JSON.parse(data[index].badging[bd].assetType).end_date);
        //                                 if (currDate > startDate && currDate < endDate)
        //                                     showBadgeIfDateIsValid = 1;
        //                             }
        //                             if(JSON.parse(data[index].badging[bd].badgePlacement).placement == 'recommendation' && showBadgeIfDateIsValid == 1){
        //                                 if(window.sessionStorage.orgId == '9f630604-daa1-455d-aceb-a4150fa9127c'){
        //                                     data[index].badging[0].badgePlacement = '{"placement": "recommendation", "position": "Top right"}';
        //                                     if(data[index].badging.length == 2){
        //                                         data[index].badging[1].badgePlacement = '{"placement": "recommendation", "position": "Bottom right"}';
        //                                     }
        //                                     if(data[index].badging.length == 3){
        //                                         data[index].badging[1].badgePlacement = '{"placement": "recommendation", "position": "Bottom right"}';
        //                                         data[index].badging[2].badgePlacement = '{"placement": "recommendation", "position": "Top left"}';
        //                                     }
        //                                     if(data[index].badging.length == 4){
        //                                         data[index].badging[1].badgePlacement = '{"placement": "recommendation", "position": "Bottom right"}';
        //                                         data[index].badging[2].badgePlacement = '{"placement": "recommendation", "position": "Top left"}';
        //                                         data[index].badging[3].badgePlacement = '{"placement": "recommendation", "position": "Bottom left"}';
        //                                     }
        //                                 }
        //                             // if(data[index].badging[bd].enabled == true){
        //                                     badgeArr.push(data[index].badging[bd])
        //                                     cln = insertRecommendationElement(cln, badgeArr, divId);
        //                                 //}
        //                             }
        //                         } catch (err) {
        //                             console.log(err);
        //                         }
        //                     //}
        //                 //}
        //             }
        //         }
        //     }
        // }
        
        if(data[index].variantInfo && data[index].variantInfo.length > 0){
            isVariantPresent = 1; 
            var variantInfo = data[index].variantInfo;
            var varStr = "<option value='-1'>Select</option>";
            //cln = replaceTags(cln, "{{variant_stock}}", 0);
            for(var index1 = 0; index1 < variantInfo.length; index1++){
                var variantSku = variantInfo[index1].sku;
                cln = replaceTags(cln, "{{variant_sku}}", variantSku);
                var variantId = variantInfo[index1].variantId;
                cln = replaceTags(cln, "{{variant_id}}", variantId);
                var variantProductId = variantInfo[index1].productId;
                cln = replaceTags(cln, "{{variant_proid}}", variantProductId);
                if(variantInfo[index1].stock)
                    if(parseFloat(variantInfo[index1].stock)>0)
                    cln = replaceTags(cln, "{{variant_stock}}", 1);
                        
                cln = replaceTags(cln, "{{variant_proid}}", variantProductId);
                varStr += "<option value="+index1+" data-name="+variantInfo[index1].name+" data-id="+variantId+" data-stock="+variantInfo[index1].stock+" data-price="+variantInfo[index1].price+" data-discprice="+variantInfo[index1].discountedPrice+" value="+variantInfo[index1].name+">"+variantInfo[index1].name+"</option>";
            }
           cln = replaceTags(cln, "{{variant_name}}", varStr);
           cln = replaceTags(cln, "{{isVariantPresent}}", 1);
        //end variant
        }
        else{
            cln = replaceTags(cln, "{{variant_name}}", "");
            cln = replaceTags(cln, "{{isVariantPresent}}", 0);
        }
        // (function(){
        //     var product = data[index];
        //     var pId = divId;
        //     cln.addEventListener('click', function(e) {
        //         sendWidgetClickEvent(product.sku, pId, product.name, product.currentPageUrl, e);
        //     });
        // });
        //sendwidget click event
        var product = data;
        var pId = divId;
        // cln.addEventListener('click', function(e) {
        //     e.preventDefault();
        //     var getProId = 0;
        //     var pIdEle = document.getElementById(pId);
        //     var a = e.target;
        //                 var els = [];
        //                 while (a) {
        //                     els.unshift(a);
        //                     a = a.parentNode;
        //                     if((a && a.attributes && a.attributes.length>0)){
        //                         if(a.attributes[0].name == "isarray" || a.attributes[0].name == "isarray2"){
        //                             var getmainpro = a.getElementsByClassName('mainProductId')
        //                             getProId = getmainpro[0].defaultValue
        //                         }
        //                     }
        //                 }
        //     if(product.length > 0){
        //         for(var pro=0;pro<=product.length-1;pro++){
        //                 if(product[pro].sku == getProId){
        //                     var getSku = getProId;
        //                     var getName = product[pro].name;
        //                     var getcurrentPageUrl = product[pro].currentPageUrl;
        //                 }
        //         }
        //     }
        //     if(getSku != 0)
        //     sendWidgetClickEvent(getSku, pId, getName,getcurrentPageUrl,e);
        // });

    //variant change event
        cln.addEventListener('change', function(event) {
            selectVariant(variantInfo,event);
        });
        parentElement.appendChild(cln);    
    }
    // if(divId.toLowerCase().includes('bundle')){
    //     data[0].name = (data[0].name).replace(/[^a-zA-Z ]/g, "");
    //     data[1].name = (data[1].name).replace(/[^a-zA-Z ]/g, "");
    //     elem = replaceTags(elem, "{{product_data1}}", "'" + encodeURIComponent(JSON.stringify(data[0])) + "'");
    //     elem = replaceTags(elem, "{{product_data2}}", "'" + encodeURIComponent(JSON.stringify(data[1])) + "'");
    // }
    for(var index = 0; index < data.length; index++){
        data[index].name = (data[index].name).replace(/[^a-zA-Z ]/g, "");
        elem = replaceTags(elem, "{{product_data}}", "'" + encodeURIComponent(JSON.stringify(data)) + "'");
    }
    elem = getCartupProductElementIsArray2(elem, data, displayName, divId);
    return elem
}
}

function getCartupListElement(elem, data, displayName, divId){
    
    elem = replaceTags(elem, "{{widget_id}}", divId);

    if(data.mainWidgetId)
        elem = replaceTags(elem, "{{mainwidget_id}}", data.mainWidgetId);

    elem = replaceTags(elem, "{{widget_displayName}}", displayName);
    elem = replaceTags(elem, "{{product_data}}", "'" + encodeURIComponent(JSON.stringify(data)) + "'");
    
    let tempElem = getElementByAttribute("isArray", elem);
    if(!tempElem){
        console.log("No attribute with isArray found");
        return;
    }
    var repeatedElem = tempElem.cloneNode(true);
    let parentElement = getElementByAttribute("isArray", elem).parentElement;
    let isArryElem = getElementByAttribute("isArray", parentElement);
    if(isArryElem){
        isArryElem.remove();
    }
    if(!repeatedElem){
        console.log("There is no array element to show product names")
        return elem;
    }
    //if(data.categoryListing.length>0){
        for(var ct1 = 0; ct1 < data[0].categoryListing.length; ct1++){
            

            var cln = repeatedElem.cloneNode(true);
            cln = replaceTags(cln, "{{product_name}}",  data[0].name);
            cln = replaceTags(cln, "{{product_id}}", data[0].sku);

            cln = replaceTags(cln, "{{product_price}}", data[0].price);
            cln = replaceTags(cln, "{{product_discountedPrice}}", data[0].discountedPrice);
            cln = replaceTags(cln, "{{nodiscount_price}}", data[0].nodiscountPrice);

            cln = replaceTags(cln, "{{product_imageUrl}}", data[0].smallImage);
            cln = replaceTags(cln, "{{product_currentPageUrl}}", data[0].currentPageUrl);
            cln = replaceTags(cln, "{{widget_displayName}}", displayName);

            cln = replaceTags(cln, "{{categoryListing_name}}", JSON.parse(data[0].categoryListing[ct1]).name);
            cln = replaceTags(cln, "{{categoryListing_url}}", JSON.parse(data[0].categoryListing[ct1]).url);
            
            //sendwidget click event
            var product = data;
            var pId = divId;
            
            cln.addEventListener('click', function(e) {
                e.preventDefault();
                var getProId = 0;
                var getSku = data[0].sku;
                var getName = data[0].name;
                var getcurrentPageUrl = "#"
                var a = e.target;
                            var els = [];
                            while (a) {
                                els.unshift(a);
                                a = a.parentNode;
                                if((a && a.attributes && a.attributes.length>0)){
                                    if(a.attributes[0].name == "isarray" || a.attributes[0].name == "isarray2"){
                                        var getmainpro = a.getElementsByClassName('mainProductId')
                                        getProId = getmainpro[0].defaultValue;
                                        var getSku = getProId;
                                        var getName = a.querySelector('.product_name').text.trim()
                                        var getcurrentPageUrl = a.querySelector('.product_name').getAttribute('href')

                                    }
                                }
                            }
                // if(product.length > 0){
                //     for(var pro=0;pro<=product.length-1;pro++){
                //             if(product[pro].sku == getProId){
                //                 var getSku = getProId;
                //                 var getName = product[0].name;
                //                 var getcurrentPageUrl = JSON.parse(data[0].categoryListing[ct1]).url;
                //             }
                //     }
                // }
                if(getSku != 0)
                sendWidgetClickEvent(getSku, pId, getName,getcurrentPageUrl,e);
            });

        
            parentElement.appendChild(cln);    
        }
        //elem = getCartupProductElementIsArray2(elem, data, displayName, divId);
        return elem

   // }
    
}

function getCartupProductElementIsArray2(elem, data, displayName, divId) {
    let tempElem = getElementByAttribute("isArray2", elem);
    if(!tempElem){
        //console.log("No attribute with isArray2 found");
        return elem;
    }
    elem = replaceTags(elem, "{{widget_displayName}}", displayName);
    var repeatedElem = tempElem.cloneNode(true);
    let parentElement = getElementByAttribute("isArray2", elem).parentElement;
    let isArryElem = getElementByAttribute("isArray2", parentElement);
    if(isArryElem){
        isArryElem.remove();
    }
    if(!repeatedElem){
        console.log("There is no array element to show product names")
        return elem;
    }
    for(var index = 0; index < data.length; index++){
        
        var cln = repeatedElem.cloneNode(true);
        cln = replaceTags(cln, "{{product_name}}", data[index].name);
        cln = replaceTags(cln, "{{nodiscount_price}}", data[index].nodiscountPrice);

        if(data[index].discountedPercentage && data[index].discountedPrice){
            if(parseFloat(data[index].discountedPercentage)>0)
                cln = replaceTags(cln, "{{product_discountedPercentage}}", data[index].discountedPercentage)+"% Off";
            else
                cln = replaceTags(cln, "{{product_discountedPercentage}}", "");
        }else{
            cln = replaceTags(cln, "{{product_discountedPercentage}}", "");
        }
            
        cln = replaceTags(cln, "{{product_discountedPrice}}", data[index].discountedPrice);
        cln = replaceTags(cln, "{{product_imageUrl}}", data[index].smallImage);
        cln = replaceTags(cln, "{{product_currentPageUrl}}", data[index].currentPageUrl);
        cln = replaceTags(cln, "{{widget_displayName}}", displayName);
        cln = replaceTags(cln, "{{product_backgroundColor}}", data[index].color);
        cln = replaceTags(cln, "{{product_id}}", data[index].sku);
        if(data[index].productId)
        cln = replaceTags(cln, "{{product_addToCartId}}", data[index].productId);
        //sendwidget click event
        var product = data;
        var pId = divId;
        // cln.addEventListener('click', function(e) {
        //     e.preventDefault();
        //     var getProId = 0;
        //     var pIdEle = document.getElementById(pId);
        //     var a = e.target;
        //                 var els = [];
        //                 while (a) {
        //                     els.unshift(a);
        //                     a = a.parentNode;
        //                     if((a && a.attributes && a.attributes.length>0)){
        //                         if(a.attributes[0].name == "isarray" || a.attributes[0].name == "isarray2"){
        //                             var getmainpro = a.getElementsByClassName('mainProductId');
        //                             if(a.getElementsByClassName('mainProductId').length > 0)
        //                             getProId = getmainpro[0].defaultValue
        //                         }
        //                     }
        //                 }
        //     if(product.length > 0){
        //         for(var pro=0;pro<=product.length-1;pro++){
        //                 if(product[pro].sku == getProId){
        //                     var getSku = getProId;
        //                     var getName = product[pro].name;
        //                     var getcurrentPageUrl = product[pro].currentPageUrl;
        //                 }
        //         }
        //     }
        //     if(getSku != 0)
        //     sendWidgetClickEvent(getSku, pId, getName,getcurrentPageUrl,e);
        // });

    //variant change event
        cln.addEventListener('change', function(event) {
            selectVariant(variantInfo,event);
        });
    parentElement.appendChild(cln);
    }
    return elem
}

function showInWeb(data) {
    if(!data.htmlTemplate) return;
    removePreviewElement();
    var elem = htmlToElem(data.htmlTemplate);
    if(!elem) return;
    elem = getCartupProductElement(elem, spotdyCartupData, "PreviewTheme");
    elem.className += " spotdyPreviewClass";
    var cssElem = htmlToElem('<style>' + data.cssTemplate + '</style>');
    elem.appendChild(cssElem);
    var jsElm = htmlToElem('<script>' + data.jsTemplate + '</script>');
    document.body.appendChild(jsElm);

    let payload = JSON.parse(decodeURI(data.payload));
    var parent = document;
    var selector = payload.cssSelector.split(">");
    for(let index = 0; index < selector.length; index++){
        parent = parent.querySelector(selector[index]);
    }
    if(!parent){
        console.log("Css selector is not correct");
        return;
    }
    parent.appendChild(elem);
    if(parent.style.display == "none")
        parent.style.display = "block";
}

function getWidgetSliderBar(elem) {
    var parent = elem.parentElement;
    while(parent && !parent.className.toLowerCase().includes("cartupwidget")){
        parent = parent.parentElement;
    }
    return parent.getElementsByClassName("cartupslider")[0];
}

function slideCartupWidgetLeft(elem) {
    let content = getWidgetSliderBar(elem);
    if(!content) return;
    let scrollStep = content.offsetWidth;
    let sl = content.scrollLeft;
            
    if ((sl - scrollStep) <= 0) {
        content.scrollTo({
            left: 0, top: 0, behavior: 'smooth'
        });
    } else {
        content.scrollTo({
            left: (sl - scrollStep), top: 0, behavior: 'smooth'
        });
    }
}

function slideCartupWidgetRight(elem) {
    let content = getWidgetSliderBar(elem);
    if(!content) return;
    let scrollStep = content.offsetWidth;
    let sl = content.scrollLeft,
            cw = content.scrollWidth;
            
        if ((sl + scrollStep) >= cw) {
            content.scrollTo({
                left: cw, top: 0, behavior: 'smooth'
            });
        } else {
            content.scrollTo({
                left: (sl + scrollStep), top: 0, behavior: 'smooth'
            });
        }
}

function removePreviewElement() {
    var elem = document.querySelector(".spotdyPreviewClass");
    if(elem)
        elem.remove();
}

function htmlToElem(html) {
    let temp = document.createElement('template');
    html = html.trim(); // Never return a space text node as a result
    temp.innerHTML = html;
    return temp.content.firstChild;
}

//copilot themes
function getAllCartyTemplates() {
    if(window.sessionStorage.cartyTemplates)
    cartyTemplates = window.sessionStorage.cartyTemplates
    if(cartyTemplates.length != 0 ){
        return;
    }
     let activeWidgets = [];
    // for(let key in allWidgets){
    //     activeWidgets.push(key);
    // }
    var url = CARTUP_THEME_HOST + "/result";
    var obj = {
        divisionIds : activeWidgets
    };
    if(window.sessionStorage.spotDyConfigData){
        let configdata = JSON.parse(window.sessionStorage.spotDyConfigData);
        obj["orgId"] = configdata.orgId;
        obj["orgName"] = configdata.orgName;
    }
    url += "?request=" + encodeURI(JSON.stringify(obj));
    var xhttp = spotdyGetXmlHttpObject();
    
    xhttp.onreadystatechange = function () {
        if (xhttp.readyState == 4 && xhttp.status == 200) {
            cartyTemplates = JSON.parse(xhttp.responseText.trim()).widgetThemes;
            window.sessionStorage.cartyTemplates = JSON.stringify(cartyTemplates)
        }
    };
    xhttp.open("GET", url, true);
    xhttp.send();
}

function getAllCartupWidgetTemplates(allWidgets) {
    if(window.sessionStorage.cartUpTemplates)
    cartUpTemplates = window.sessionStorage.cartUpTemplates
    if(cartUpTemplates.length != 0 ){
        return;
    }
    let activeWidgets = [];
    for(let key in allWidgets){
        activeWidgets.push(key);
    }
    var url = CARTUP_THEME_HOST + "/result";
    var obj = {
        divisionIds : activeWidgets
    };
    if(window.sessionStorage.spotDyConfigData){
        let configdata = JSON.parse(window.sessionStorage.spotDyConfigData);
        obj["orgId"] = configdata.orgId;
        obj["orgName"] = configdata.orgName;
    }
    url += "?request=" + encodeURI(JSON.stringify(obj));
    var xhttp = spotdyGetXmlHttpObject();
    xhttp.onreadystatechange = function () {
        if (xhttp.readyState == 4 && xhttp.status == 200) {
            cartUpTemplates = JSON.parse(xhttp.responseText.trim()).widgetThemes;
            window.sessionStorage.cartUpTemplates = JSON.stringify(cartUpTemplates)
        }
    };
    xhttp.open("GET", url, true);
    xhttp.send();
}

function showCartupCustomTheme(divId, element, data, displayName, isDomBased, position, customValues = {}, recoType){
    if(document.getElementById('cartup_'+divId))
    return false;

    let template;
    // if(data.length > 0 && element){
    //     element.style.cssText = "display:block !important"
    // }
    cartUpTemplates = JSON.parse(window.sessionStorage.cartUpTemplates);
    for(let index = 0; index < cartUpTemplates.length; index++){
        if(cartUpTemplates[index].divisionIds.includes(divId)){
            template = cartUpTemplates[index];
        }
        if(window.sessionStorage.orgId === '9f630604-daa1-455d-aceb-a4150fa9127c'){
            if(data.mainWidgetId){
                if(cartUpTemplates[index].divisionIds.includes(data.mainWidgetId)){
                    template = cartUpTemplates[index];
                }
            }
        }
    }
    
    if(!template){
        console.log("No template found");
        return false;
    }
    var htmlElem = htmlToElem(template?.htmlTemplate);
    if(!htmlElem) {
        return console.log("Failed to get the element for html template ");
    }
    // if(data.length>0){
    //     if(data[0].categoryListing){
    //         if(data[0].categoryListing){
    //             htmlElem = getCartupListElement(htmlElem, data, displayName, divId)
    //         }
    //     }
    //     else{
    //         htmlElem = getCartupProductElement(htmlElem, data, displayName, divId, customValues);
    //     }
    
    //     insertIntoCartupWidget(isDomBased, element, htmlElem, position);
    //     if(element.style.display == "none"){
    //         element.style.display = "block";
    //     }
    //     let cssText = template?.css || template?.cssTemplate || "";
    //     let styleText = "<style>" + cssText + "</style>";
    //     var cssElem = htmlToElem(styleText);
    //     insertIntoCartupWidget(isDomBased, element, cssElem, position);
    //     let jsT = template?.js || template?.jsTemplate || "";
    //     var scriptEle = document.createElement('script');
    //     scriptEle.text = jsT;
    //     document.body.appendChild(scriptEle);
    // }
    if(recoType === "products.categoryListing"){
        htmlElem = getCartupListElement(htmlElem, data, displayName, divId)
    }else{
        htmlElem = getCartupProductElement(htmlElem, data, displayName, divId, customValues);
    }

    //htmlElem = getCartupProductElement(htmlElem, data, displayName, divId, customValues);
    insertIntoCartupWidget(isDomBased, element, htmlElem, position);
    if(element.style.display == "none"){
        element.style.display = "block";
    }
    let cssText = template?.css || template?.cssTemplate || "";
    let styleText = "<style>" + cssText + "</style>";
    var cssElem = htmlToElem(styleText);
    insertIntoCartupWidget(isDomBased, element, cssElem, position);
    let jsT = template?.js || template?.jsTemplate || "";
    var scriptEle = document.createElement('script');
    scriptEle.text = jsT;
    document.body.appendChild(scriptEle);
    return true;
}

function insertIntoCartupWidget(isDomBased, element, elem, position ) {
    if(isDomBased){
        if(position == "Last element"){
            return element.appendChild(elem);
        } else if(position == "First element"){
            return element.prepend(elem);
        } else if(position == "Next siblings" || position == "Next sibling"){
            return element.parentNode.insertBefore(elem, element);
        } else if(position == "Prev siblings"){
            return element.parentNode.prepend(elem,element)
            //return element.parentNode.insertAfter(elem, element);
        }
    } else {
        return element.appendChild(elem);
    }
}
